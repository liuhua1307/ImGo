// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/cloudwego/kitex/server"
	"github.com/liuhua1307/ImGo/rpc/dynamics/dynamic_consumer/configs"
	cache2 "github.com/liuhua1307/ImGo/rpc/dynamics/dynamic_consumer/consumer/cache"
	"github.com/liuhua1307/ImGo/rpc/dynamics/dynamic_consumer/consumer/usecase"
	"github.com/liuhua1307/ImGo/rpc/dynamics/dynamic_consumer/pkg/cache"
	"github.com/liuhua1307/ImGo/rpc/dynamics/dynamic_consumer/pkg/mq"
	server2 "github.com/liuhua1307/ImGo/rpc/dynamics/dynamic_consumer/server"
)

// Injectors from wire.go:

func wireApp() server.Server {
	context := configs.NewContext()
	client := configs.NewRDB(context)
	redisCache := cache.NewRedis(client)
	pullConsumer := configs.NewConsumer()
	rocket := mq.NewRocket(pullConsumer)
	mqMq := mq.NewMq(rocket)
	dynamicRedisRepository := cache2.NewDynamicRepository(redisCache, mqMq)
	dynamicUseCase := usecase.NewDynamicsUseCase(dynamicRedisRepository)
	consumer := server2.NewConsumerImpl(dynamicUseCase)
	serverServer := server2.NewKitexServer(consumer)
	return serverServer
}
